<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yimayhd.sellerAdmin.mapper.HaRoleMapper">
	<resultMap id="BaseResultMap" type="com.yimayhd.sellerAdmin.model.HaRoleDO">

		<id column="id" property="id" jdbcType="BIGINT" />

		<result column="name" property="name" jdbcType="VARCHAR" />

		<result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />

		<result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />

		<result column="status" property="status" jdbcType="INTEGER" />

	</resultMap>
	<resultMap id="roleDetail" type="com.yimayhd.sellerAdmin.model.HaRoleDetail">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="name" property="menuName" jdbcType="VARCHAR" />
		<result column="url" property="menuUrl" jdbcType="VARCHAR" />
		<result column="ha_role_id" property="roleId" javaType="java.lang.Long"
			jdbcType="BIGINT" />
		<result column="ha_role_menu_id" property="roleMenuId" jdbcType="BIGINT"/>
		<result column="is_own" property="isOwn" jdbcType="BOOLEAN" />
	</resultMap>

	<sql id="Base_Column_List">
		id,name,gmt_created,gmt_modified,status
	</sql>

	<select id="totalCount" resultType="java.lang.Long"
		parameterType="com.yimayhd.sellerAdmin.model.query.RoleListQuery">
		select count(1)
		from ha_role
		<where>
			1 = 1
			<if test="roleId != null">
				and id = #{roleId}
			</if>
			<if test="roleName != null and roleName != ''">
				and name like CONCAT('%', #{roleName}, '%')
			</if>
			<if test="status != null">
				and status = #{status}
			</if>
			<if test="createBeginTime != null and createBeginTime !=''">
				and gmt_created > #{createBeginTime}
			</if>
			<if test="createEndTime != null and createEndTime != ''">
				and #{createEndTime} > gmt_created
			</if>
		</where>
	</select>

	<select id="getListNew" resultMap="BaseResultMap"
		parameterType="com.yimayhd.sellerAdmin.model.query.RoleListQuery">
		select
		<include refid="Base_Column_List" />
		from ha_role
		<where>
			1 = 1
			<if test="roleId != null">
				and id = #{roleId}
			</if>
			<if test="roleName != null and roleName != ''">
				and name like CONCAT('%', #{roleName}, '%')
			</if>
			<if test="status != null">
				and status = #{status}
			</if>
			<if test="createBeginTime != null and createBeginTime !=''">
				and gmt_created > #{createBeginTime}
			</if>
			<if test="createEndTime != null and createEndTime != ''">
				and #{createEndTime} > gmt_created
			</if>
			order by id asc
			limit #{pageBegin}, #{pageSize}
		</where>
	</select>

	<select id="roleDetailById" parameterType="com.yimayhd.sellerAdmin.model.query.RoleListQuery"
		resultMap="roleDetail">
 		<![CDATA[select a.id as id,
                           a.name as name,
                           a.url as url,
                           b.ha_role_id as ha_role_id,
                           b.id as ha_role_menu_id,           
                           case when b.ha_role_id = ${roleId}
                                   then 1
                                else 0 end as is_own
                  from ha_menu a
                  left join (
                        select d.id as id ,
                               d.ha_menu_id as ha_menu_id ,
                               count(distinct d.ha_menu_id) as count,
                                    c.ha_role_id as ha_role_id,
                                    c.gmt_created as gmt_created,
                                    c.gmt_modified as gmt_modified,
                                    c.status as status
                         from  ha_role_menu d
                         left join                    
                          (select id,
                                   ha_menu_id,
                                   ha_role_id,
                                   gmt_created,
                                   gmt_modified,
                                   status
                        from ha_role_menu 
                        where ha_role_id = ${roleId}
                        and status = 1) c
                        on d.id = c.id
                        group by d.ha_menu_id
                        order by d.id
                  ) b
                    on a.id = b.ha_menu_id
                    where a.parent_id <> 0
                    order by a.id asc 
                    limit ${pageBegin}, ${pageSize} 
 		]]>
	</select>

	<select id="roleDetailCount" resultType="java.lang.Long">
		<![CDATA[select count(1)
		from ha_menu a
		left join ha_role_menu b
		on a.id = b.ha_menu_id
		where
		a.parent_id <> 0		
 		]]>
	</select>

	<!--insert的时候要去掉ID，创建时间，更新时间和状态 -->
	<insert id="add" parameterType="com.yimayhd.sellerAdmin.model.HaRoleDO"
		useGeneratedKeys="true" keyProperty="id">
		insert into ha_role
		(id,name,gmt_created,gmt_modified,status)
		values (

		#{id,jdbcType=BIGINT},

		#{name,jdbcType=VARCHAR},

		#{gmtCreated,jdbcType=TIMESTAMP},

		#{gmtModified,jdbcType=TIMESTAMP},

		#{status,jdbcType=INTEGER}

		)
	</insert>

	<select id="getById" resultMap="BaseResultMap" parameterType="long">
		select
		<include refid="Base_Column_List" />
		from ha_role t
		where
		t.id = #{id}
	</select>

	<sql id="search_clause">
		<where>
			<if test="entity != null">
				<if test="entity.status == null">
					and t.status = 1
				</if>
				<if test="entity.status != null">
					and t.status = #{entity.status}
				</if>
			</if>
			<if test="entity == null">
				and t.status = 1
			</if>
		</where>
	</sql>

	<select id="getList" resultMap="BaseResultMap"
		parameterType="com.yimayhd.sellerAdmin.base.PageQuery">
		select
		<include refid="Base_Column_List" />
		from ha_role t
		<include refid="search_clause" />
		order by t.created_on desc
		<if test="isPaging != 0">
			limit #{from},#{pageSize}
		</if>
	</select>

	<select id="getCount" resultType="long"
		parameterType="com.yimayhd.sellerAdmin.model.HaRoleDO">
		select count(1) from ha_role t
		<include refid="search_clause" />
	</select>

	<update id="updateRoleStatus" parameterType="com.yimayhd.sellerAdmin.model.HaRoleDO">
		update ha_role t
		<set>
			<if test="name != null">
				t.name = #{name,jdbcType=VARCHAR},
			</if>

			<if test="gmtCreated != null">
				t.gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
			</if>

			<if test="gmtModified != null">
				t.gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
			</if>

			<if test="status != null">
				t.status = #{status,jdbcType=INTEGER}
			</if>

		</set>
		where
		t.id = #{id}
	</update>

	<update id="delete" parameterType="long">
		update ha_role t set t.status
		= 0 where t.id = #{value}
	</update>
</mapper>