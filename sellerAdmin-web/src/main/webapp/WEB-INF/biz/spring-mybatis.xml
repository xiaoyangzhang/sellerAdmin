<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<bean id="statFilter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="10000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="filters" value="config" />
		<property name="connectionProperties" value="config.decrypt=false"/>
		<property name="proxyFilters">
			<list>
				<ref bean="statFilter"/>
			</list>
		</property>
	</bean>

	<!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath*:mybatis/*.xml"/>
		<property name="typeAliasesPackage" value="com.yimayhd.sellerAdmin.entity"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
	</bean>
	<!-- 扫描所有Mapper接口文件-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yimayhd.sellerAdmin.mapper"/>
	</bean>
	<!-- 配置事务 -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>


	<bean id="transactionTemplate"  class="org.springframework.transaction.support.TransactionTemplate" >
		<property name="transactionManager" ref="transactionManager" />
	</bean>


	<!-- 定义事务通知(主要是针对指定事务管理器对应的事务实现配置事务参数) -->
	<!--<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			&lt;!&ndash; 对选定的方法配置详细的事务属性 &ndash;&gt;
			&lt;!&ndash; 一次执行多次查询来统计某些信息，这时为了保证数据整体的一致性，要用只读事务 &ndash;&gt;
			<tx:method name="get*" read-only="true"/>

			&lt;!&ndash;<tx:method name="save*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="update*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="delete*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="insert*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="remove*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="modify*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="create*" rollback-for="Exception" propagation="REQUIRED"/>
			<tx:method name="add*" rollback-for="Exception" propagation="REQUIRED"/>&ndash;&gt;

			<tx:method name="*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	&lt;!&ndash;启用事务注解配置&ndash;&gt;
	<tx:annotation-driven transaction-manager="transactionManager"/>
	&lt;!&ndash; 事务AOP配置 &ndash;&gt;
	<aop:config>
		&lt;!&ndash;  声明事务切入点(配置哪些类的哪些方法参与事务) &ndash;&gt;
		<aop:pointcut id="AllServiceMethod"
					  expression="execution(* com.yimayhd.sellerAdmin..*Impl.*(..))"/>
		&lt;!&ndash; 通知器(把事务通知绑定到切入点) &ndash;&gt;
		<aop:advisor pointcut-ref="AllServiceMethod" advice-ref="txAdvice"/>
	</aop:config>-->
</beans>