<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


    <!-- 启用spring mvc 注解@Autowired,@Resource,@Required等 <context:annotation-config /> 有了下面扫描配置后该项可以省掉-->
    <!--启用spring的注解功能-->
    <context:component-scan base-package="com.yimayhd.**.controller"/>

    <!--<mvc:interceptors>
        <bean class="com.yimayhd.sellerAdmin.interceptor.LoginInterceptor"/>
    </mvc:interceptors>-->


    <!--系统默认欢迎页
    <mvc:view-controller path="/" view-name="system/auth/login"/>
    -->

    <mvc:annotation-driven/>

    <!--jsp文件映射,自动追加前缀和后缀
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/pages/" p:suffix=".jsp" />
    -->
    <!-- p:viewClass="org.springframework.web.servlet.view.JstlView" -->

    <!-- 对静态资源文件的访问
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/" cache-period="31556926"/>
    -->

    <!-- 配置js,css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理 -->
    <mvc:resources location="/WEB-INF/resources/" mapping="/resources/**" />

    <!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>-->


    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <!-- 模板存放的路径 -->
        <property name="resourceLoaderPath" value="/WEB-INF/view" />
        <property name="configLocation" value="/WEB-INF/velocity.properties" />
    </bean>

    <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name="suffix" value=".vm" /><!-- 视图文件的后缀名 -->
        <!--<property name="prefix" value="template/"/>&lt;!&ndash; 视图文件的路径 &ndash;&gt;-->
        <property name="cache" value="false"/>
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持-->
        <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->
        <property name="requestContextAttribute" value="rc"/><!--request属性引用名称-->
        <property name="layoutUrl" value="/system/layout/empty.vm"/>
        <property name="dateToolAttribute" value="date" /><!--日期函数名称-->
        <property name="numberToolAttribute" value="number" /><!--数字函数名称-->
        <property name="toolboxConfigLocation" value="/WEB-INF/view/toolbox.xml"/>
        <!--spring3.1支持velocity-tools2.0-->
        <property name="viewClass" value="com.yimayhd.sellerAdmin.view.VelocityLayoutToolbox20View"/>
        <!--下面两项属性不明白-->
        <!--<property name="order" value="0"/>-->


    </bean>

    <!-- 支持上传文件 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"></property>
    </bean>

<aop:aspectj-autoproxy expose-proxy="true"/>
    <!-- 启用spring mvc 内建的Jackson支持  -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>
    </bean>




</beans>